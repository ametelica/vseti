<?php
global $app,$user,$setting,$hash,$lang_var,$db;

$options = array(
	'url' => 'http://'.($user->byfly==1?'':'v').'cs'.$app->app_info['app_cs'].'.'.$setting['host'].'/upload.php',
	'save_act' => 'a_save_photo', 
	'server' => $app->app_info['app_cs'],
	'default_error' => 1,
	'error_hash' => '34bcade93679470633eb0487beca7aa2',
	'check_hash' => '728f2149228cb3acb8',
	'lang' => array(
		'button_browse' => 'Выбрать файл',
		'switch_mode' => 'Если у вас возникли проблемы с загрузкой файла, воспользуйтесь {link}стандартным{/link} загрузчиком.',
		'cannot_upload_title' => 'Ошибка',
		'cannot_upload_text' => 'Загрузка изображений в данный момент недоступна. Попробуйте повторить операцию позже.',
		'apps_banner_size_error' => 'Размер загруженного изображения не соответствует <b>186x116px</b>.',
		'apps_photo_notloaded_unknown' => 'Не удалось загрузить данное изображение.'
	),
	'vars' => array(
		'act' => 'app',
		'mid' => $user->id,
		'aid' => $app->app_info['app_id'],
		'hash' => $hash->get_hash($user->id,32,'h1app'),
		'rhash' => '15a9a1228e70a9c98d08da2f3ea7061f',
		'vs' => 1,
		'upldr' => 1
	),
	'small' => array(),
	'banner' => array(
		'save_act' => 'a_save_banner',
		'lang' => array('button_browse' => 'Выберите изображение'),
		'vars' => array('act' => 'app_photo')
	),
	'screenshot' => array(
		'error_hash' => 'a8c7d4de2186dafa66dafa8b20178e1d',
		'check_hash' => 'fd9c75919566677c63',
		'lang' => array('button_browse' => 'Выберите изображение'),
		'save_act' => 'a_save_screenshot',
		'vars' => array(
			'act' => 'app_screenshot', // app_screenshot
			'aid' => $app->app_info['app_id'],
			'gid' => 0,
			'hash' => $hash->get_hash($user->user_info['user_id'],32,'h1app_screenshot'),
			'rhash' => '9b0a758c4f3b36a5190142f9d5ef5b4d',
			'mid' => $user->user_info['user_id'],
		),
		'success_callback' => 'screenshot_uploaded'
	)
);
?>

cur.privacy = {"help":[0,1,[],[]],"help_types":["Выключена","Включена"],"help_help":"После включения страницы помощи над приложением появится ссылка <b>Помощь<\/b>, при переходе на которую пользователь увидит Ваш текст."};
extend(cur, {"ssCount":<?=intval(count($app->app_info['app_screenshots']))?>,"ssHash":"<?=hash_get($user->id.$app->app_id,16,'ssh')?>","terms_hint":"Ссылка на пользовательское соглашение отображается в диалоге установки приложения. <br><br>По умолчанию используется <a href=\"http:\/\/vseti.by\/dev.php?p=uterms\" target=\"_blank\">типовое пользовательское соглашение<\/a>.","policy_hint":"Ссылка на политику конфиденциальности отображается в диалоге установки приложения. <br><br>По умолчанию используется <a href=\"http:\/\/vseti.by\/dev.php?p=uprivacy\" target=\"_blank\">типовая политика конфиденциальности<\/a>."});

cur.dropDowns = {};
var options = <?=jenc($options)?>;

var opts = extend(true, clone(options, true), options['small']);
AppsEdit.initUpload(ge('apps_edit_upload_small'), opts, opts.lang, ge('apps_edit_img_small'));


if (options['banner']) {
  var opts = extend(true, clone(options, true), options['banner']);
  AppsEdit.initUpload(ge('apps_edit_upload_banner'), opts, opts.lang, ge('apps_edit_banner'));
}

if (options['screenshot']) {
  var opts = extend(true, clone(options, true), options['screenshot']);
  var screenCont = ge('apps_edit_upload_screenshot');
  if (screenCont) {
    AppsEdit.initUpload(screenCont, opts, opts.lang, ge('apps_edit_screenshot'));
  }
}

cur['screenshot_uploaded'] = function(img, pid) {
  var lastScreen = geByClass1('apps_empty_screen', ge('apps_edit_screens_list'));
  if (lastScreen) {
    lastScreen.style.background = 'url('+img+') no-repeat';
    removeClass(lastScreen, 'apps_empty_screen');
    lastScreen.setAttribute('rel', pid);
    cur.ssCount += 1;
    if (cur.ssCount >= 4) {
      show('apps_edit_ss_reason');
      hide('apps_edit_ss_limit');
    }
  }
}

cur.mainCat = <?=$app->app_info['app_type']>100?1:0?>;

<?
$app_types = array();
foreach($lang_var['app_types'] as $k=>$v){
	$app_types[$k<100?0:1][] = '['.$k.',"'.$v.'"]';
}
?>

var catList = [[<?=join(',',$app_types[0])?>],[<?=join(',',$app_types[1])?>]];

window.radioBtns['app_category'] = {
  els: [ge('app_category_0'), ge('app_category_1')]
}

cur.defVals = [0, 100];
cur.defVals[cur.mainCat] = 10;

cur.checkAppCat = function(type) {
  radiobtn(ge('app_category_' + type), type, 'app_category');
  if (type != cur.mainCat) {
    var dd = cur.dropDowns['app_subcategory'];
    cur.defVals[cur.mainCat] = dd.val();
    cur.mainCat = type;
    dd.setData(catList[cur.mainCat]);
    dd.val(cur.defVals[cur.mainCat])
  }
}
cur.checkAppCat(cur.mainCat);

cur.dropDowns['app_subcategory'] = new Dropdown(ge('app_subcategory'), catList[cur.mainCat], {
  width: '258px',
  selectedItems: '<?=$app->app_info['app_type']?>',
  multiselect: false
});

<?

$my_groups = array(array(0,"Группа не выбрана"));
$groups_where_i_owner = $user->user_groups_admin($app->app_info['app_group_id']);



$groups_where_i_owner = kv2arr($groups_where_i_owner);

if(!empty($groups_where_i_owner)){
    $my_groups = array_merge($my_groups, $groups_where_i_owner);
}

?>
var groupsList = <?=jenc($my_groups)?>;
if (groupsList) {
  cur.dropDowns['app_group'] = new Dropdown(ge('app_group'), groupsList, {
    width: '258px',
    selectedItems: '<?=$app->app_info['app_group_id']?>',
    multiselect: false
  });
}  

