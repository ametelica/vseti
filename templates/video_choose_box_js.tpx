<?php
global $videolist, $on_page, $to_id, $from;
?>box.setOptions({hideButtons: true, title: false, width: 580, bodyStyle: 'padding: 0px; border: 0px;'});
placeholderSetup('choose_video_query', {back: true});
if (ge('choose_video_query')) elfocus('choose_video_query');
var loading = false, objMore = ge('video_choose_more'),
    searchBar = ge('video_attach_search'), searchBarWrap = ge('video_attach_search_wrap'),
    searchCont = ge('video_attach_search_cont'), videoContent = ge('choose_video_content'),
    videoRows = ge('choose_video_rows'), preloadRows = ge('choose_video_preload_rows'),
    chooseBack = false, offset = <?=intval($on_page)?>, count = <?=intval($videolist['total'])?>,
    alWikiEditor = 0, performer = false;
var videoFrom = '<?=$from?>';
cur.chooseVideoQuery = '';
cur.chooseClearSearch = function(el) {
  setStyle(el, {opacity: .6});
  removeClass(el, 'shown');
  ge('choose_video_query').setValue('');
  cur.chooseVideoQuery = '';
  offset = 0;
  preloadRows.innerHTML = '';
  elfocus(ge('choose_video_query'));
  cur.videoChooseSearch();
}
cur.updateChooseList = function(e, obj) {
  clearTimeout(this.filterTimeout);
  this.filterTimeout = setTimeout((function() {
    var str = trim(obj.value);
    if (str == cur.chooseVideoQuery && !cur.ignoreEqual) {
      return;
    }
    toggleClass(ge('choose_query_reset'), 'shown', !!str);
    clearTimeout(this.searchTimeout);
    this.searchTimeout = setTimeout((function() {
      cur.chooseVideoSearch();
    }).bind(this), 300);
  }).bind(this), 10);
}
cur.chooseVideoSearch = function() {
  cur.chooseVideoQuery = val('choose_video_query');
  offset = 0;
  preloadRows.innerHTML = '';
  cur.videoChooseSearch();
  return false;
}
cur.chooseVideoScroll = function() {
  var st = boxLayerWrap.scrollTop, mx = 200, vis = cur.lSTLWas || (st > mx), o = 0;
  cur.lSTL.style.marginTop = st + 'px';
  if (!vis) {
    if (cur.lSTLShown !== 0) {
      hide(cur.lSTL);
      cur.lSTLShown = 0;
    }
  } else {
    if (cur.lSTLShown !== 1) {
      show(cur.lSTL);
      cur.lSTLShown = 1;
    }
    if (cur.lSTLWas && st > 500) {
      cur.lSTLWas = 0;
    }
    if (st > mx) {
      o = (st - mx) / mx;
      if (cur.lSTLWasSet) {
        cur.lSTLWasSet = 0;
        val(domLC(cur.lSTL), getLang('global_to_top'));
        removeClass(domLC(cur.lSTL), 'down');
      }
    } else {
      o = (mx - st) / mx;
      if (cur.lSTLWas) {
        if (!cur.lSTLWasSet) {
          cur.lSTLWasSet = 1;
          val(domLC(cur.lSTL), '');
          addClass(domLC(cur.lSTL), 'down');
        }
      }
    }
  }
  setStyle(cur.lSTL, {opacity: Math.min(Math.max(o, 0), 1)});

  var pos = getXY(searchBarWrap)[1], h = getSize(searchBar)[1];
  toggleClass(searchCont, 'fixed', pos < scrollGetY());
  setStyle(videoContent, {marginTop: (pos < scrollGetY() ? h : 0)});
  var bt = lastWindowHeight;
  if (isVisible(objMore) && (bt > getXY(objMore, true)[1] - (browser.msie6 ? 0 : scrollGetY()) - bt)) {
    objMore.click();
  }
}
cur.switchChooseGroupVideos = function(group) {
  cur.chooseVideoGroup = !!group;
  ge('choose_video_query').setValue('');
  cur.chooseVideoQuery = '';
  offset = 0;
  preloadRows.innerHTML = '';
  cur.videoChooseSearch();
  return false;
}
cur.videoChooseSearch = function() {
  if (loading) return false;
  loading = true;
  var params = {one_page: 1, q: cur.chooseVideoQuery, al_wiki_editor: alWikiEditor};
  if (cur.chooseVideoGroup) {
    params.tab = 'group_videos';
  }
  extend(params, {act: 'a_choose_video_box', to_id: '<?=$to_id?>', offset: offset});
  if (videoFrom) {
    params['from'] = videoFrom;
  }
  if (!offset) {
    animate(boxLayerWrap, {scrollTop: 0}, 200);
    addClass(ge('choose_video'), 'loading');
  }
  ajax.post('al_video.php', params, {
    onDone: function(rows, preload, newOffset, newCount, moreLabel, rightLink) {
      if (params.offset) {
        var el = ce('div', {innerHTML: rows});
        while (el.firstChild) {
          videoRows.appendChild(el.firstChild);
        }
      } else {
        videoRows.innerHTML = rows;
      }
      preloadRows.innerHTML = preload || '';
      offset = newOffset;
      count = newCount;
      ge('video_choose_right_link').innerHTML = rightLink || '';
      objMore.innerHTML = moreLabel || '';
      toggle(objMore, !!moreLabel);
      loading = false;
      removeClass(ge('choose_video'), 'loading');
    },
    onFail: function() {
      if (chooseBack) objMore.innerHTML = chooseBack;
      loading = false;
      removeClass(ge('choose_video'), 'loading');
    }
  });
}
cur.videoChooseMore = function() {
  if (preloadRows.firstChild) {
    while (preloadRows.firstChild) {
      videoRows.appendChild(preloadRows.firstChild);
    }
    if (offset >= count) {
      hide(objMore);
    }
    return;
  }
  chooseBack = objMore.innerHTML;
  objMore.innerHTML = '<img width="32" height="8" src="/images/upload'+(window.devicePixelRatio >= 2 ? '_2x' : '')+'.gif">';
  cur.videoChooseSearch();
}
cur.lSTLDown = function(e) {
  e = e || window.event;
  if (checkEvent(e)) return;

  if (!__afterFocus) {
    var to = 0, st = boxLayerWrap.scrollTop;
    if (cur.lSTLWasSet && cur.lSTLWas) {
      to = cur.lSTLWas;
      cur.lSTLWas = 0;
    } else {
      cur.lSTLWas = st;
    }
    boxLayerWrap.scrollTop = to;
  }
  return cancelEvent(e);
}

if (cur.lSTL) re(cur.lSTL);
extend(cur, {
  lSTL: boxLayerWrap.appendChild(ce('div', {id: 'layer_stl', innerHTML: '<div id="layer_stl_bg" class="fixed"></div><div id="layer_stl_cl"></div><nobr id="layer_stl_text" class="fixed">' + getLang('global_to_top') + '</nobr>', el: box.bodyNode, onclick: cancelEvent, onmousedown: cur.lSTLDown, sc: cur.chooseVideoScroll})),
  lSTLShown: 0,
  lSTLWas: 0,
  lSTLWasSet: 0
});
setTimeout(onBodyResize, 0);
box.setOptions({onClean: function() {
  removeEvent(boxLayerWrap, 'scroll', cur.chooseVideoScroll);
  re(cur.lSTL);
}});
addEvent(boxLayerWrap, 'scroll', cur.chooseVideoScroll);